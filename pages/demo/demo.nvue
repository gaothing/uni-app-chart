<template>
	<view class="page">
		<gcanvas class="canvas" ref="gcanvess"> </gcanvas>
	</view>
</template>

<script>
	import {
		enable,
		WeexBridge
	} from '../../gcanvas/index.js';
	import option from './option.js'

	import drawLine from './comm/Axis.js'
	import line from './comm/line.js'
	import defaultStyle from './comm/defaultStyle.js'
	//demo曲线测试
	import quxianTest from './comm/quxianDemo.js'
	export default {
		data() {
			return {
				context: {},
				canvasHeight: 800
			}
		},

		onReady: function(e) {
			/*获取元素引用*/
			var ganvas = this.$refs["gcanvess"];
			/*通过元素引用获取canvas对象*/
			this.canvasObj = enable(ganvas, {
				bridge: WeexBridge
			});
			const systemInfo = uni.getSystemInfoSync()
			/*获取绘图所需的上下文，目前不支持3d*/
			const context = this.canvasObj.getContext('2d');
			context.width = systemInfo.windowWidth
			context.height = systemInfo.windowWidth * this.canvasHeight / 750;

			setInterval(() => {
				option.series[0].data.shift()
				option.series[0].data.push(Math.random() * 20 + 40)
				// option.series[1].data.shift()
				// option.series[1].data.push(Math.random() * 20 + 20)
				line(context, option);
			}, 500)
		},
		onShow() {
			// this.socket()
		},
		methods: {

		}
	}
</script>

<style scoped>
	.page {
		width: 750upx;
		height: 800upx;
		background-color: #fff;
	}

	.canvas {
		width: 750upx;
		height: 800px;
		background-color: #EEEEAE;
		/* margin-bottom: 10upx; */
	}
</style>
